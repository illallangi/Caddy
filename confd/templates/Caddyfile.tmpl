{{getv "/caddy/fqdn"}} {
  tls /etc/caddy/tls.crt /etc/caddy/tls.key
  route /auth* {
    auth_portal {
      path /auth
      backends {
        production {
          method oauth2
          realm production
          provider generic
          client_id {{getv "/caddy/client/id"}}
          client_secret {{getv "/caddy/client/secret"}}
          scopes openid email profile
          base_auth_url "{{getv "/caddy/auth/url"}}"
          metadata_url "{{getv "/caddy/auth/url"}}.well-known/openid-configuration"
        }
      }
      jwt {
        token_name {{getv "/caddy/token/name" "access_token"}}
        token_secret {{getv "/caddy/token/secret"}}
      }
    }
  }
  route /.well-known/teapot {
    teapot
  }
  route /.well-known/health {
    respond "OK" 200
  }
{{range $idx, $proxy := ls "/proxy"}}
  # {{$idx}}: PROXY_{{ toUpper $proxy }}_*
  route {{getv (print "/proxy/" $proxy "/location") "/"}}* {
{{if eq $idx 0}}
    jwt {
      primary yes
      trusted_tokens {
        static_secret {
          token_name {{getv "/caddy/token/name" "access_token"}}
          token_secret {{getv "/caddy/token/secret"}}
        }
      }
      auth_url /auth/oauth2/production
    }
{{ else }}
    jwt
{{ end }}
{{if ls (print "/proxy/" $proxy "/port")}}
    reverse_proxy localhost:8080 {{getv (print "/proxy/" $proxy "/protocol") "http"}}://{{getv (print "/proxy/" $proxy "/host") "localhost"}}:{{getv (print "/proxy/" $proxy "/port")}}
{{else}}
    respond * "Generic SSO" 200
{{end}}
  }
{{end}}
}
:5800 {
  respond /.well-known/health 200
}